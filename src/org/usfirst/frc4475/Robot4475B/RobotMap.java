// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4475.Robot4475B;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController mainDriveFLSpeedController;
    public static SpeedController mainDriveRLSpeedController;
    public static SpeedController mainDriveFRSpeedController;
    public static SpeedController mainDriveRRSpeedController;
    public static RobotDrive mainDriveMainDrive1;
    public static Gyro mainDriveRobotSpinGyro;
    public static Ultrasonic mainDriveDistanceSensor;
    public static Encoder mainDriveFLQuadratureEncoder;
    public static Encoder mainDriveRLQuadratureEncoder;
    public static Encoder mainDriveFRQuadratureEncoder;
    public static Encoder mainDriveRRQuadratureEncoder;
    public static DoubleSolenoid mainCompressorFeederPostionArm;
    public static Compressor mainCompressorMainCompressor;
    public static SpeedController ballFeederBallFeeder1;
    public static SpeedController ballFeederBallFeeder2;
    public static AnalogChannel ballTossBallTossPosition;
    public static SpeedController ballTossBallToss1;
    public static SpeedController ballTossBallToss2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        mainDriveFLSpeedController = new Jaguar(1, 1);
	LiveWindow.addActuator("MainDrive", "FL Speed Controller", (Jaguar) mainDriveFLSpeedController);
        
        mainDriveRLSpeedController = new Jaguar(1, 2);
	LiveWindow.addActuator("MainDrive", "RL Speed Controller", (Jaguar) mainDriveRLSpeedController);
        
        mainDriveFRSpeedController = new Jaguar(1, 3);
	LiveWindow.addActuator("MainDrive", "FR Speed Controller", (Jaguar) mainDriveFRSpeedController);
        
        mainDriveRRSpeedController = new Jaguar(1, 4);
	LiveWindow.addActuator("MainDrive", "RR Speed Controller", (Jaguar) mainDriveRRSpeedController);
        
        mainDriveMainDrive1 = new RobotDrive(mainDriveFLSpeedController, mainDriveRLSpeedController,
              mainDriveFRSpeedController, mainDriveRRSpeedController);
	
        mainDriveMainDrive1.setSafetyEnabled(true);
        mainDriveMainDrive1.setExpiration(0.1);
        mainDriveMainDrive1.setSensitivity(0.5);
        mainDriveMainDrive1.setMaxOutput(1.0);
        mainDriveMainDrive1.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        mainDriveMainDrive1.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        mainDriveRobotSpinGyro = new Gyro(1, 1);
	LiveWindow.addSensor("MainDrive", "RobotSpinGyro", mainDriveRobotSpinGyro);
        mainDriveRobotSpinGyro.setSensitivity(0.007);
        mainDriveDistanceSensor = new Ultrasonic(1, 13, 1, 12);
	LiveWindow.addSensor("MainDrive", "DistanceSensor", mainDriveDistanceSensor);
        
        mainDriveFLQuadratureEncoder = new Encoder(1, 1, 1, 2, false, EncodingType.k4X);
	LiveWindow.addSensor("MainDrive", "FL Quadrature Encoder ", mainDriveFLQuadratureEncoder);
        mainDriveFLQuadratureEncoder.setDistancePerPulse(1.0);
        mainDriveFLQuadratureEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        mainDriveFLQuadratureEncoder.start();
        mainDriveRLQuadratureEncoder = new Encoder(1, 3, 1, 4, false, EncodingType.k4X);
	LiveWindow.addSensor("MainDrive", "RL Quadrature Encoder", mainDriveRLQuadratureEncoder);
        mainDriveRLQuadratureEncoder.setDistancePerPulse(1.0);
        mainDriveRLQuadratureEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        mainDriveRLQuadratureEncoder.start();
        mainDriveFRQuadratureEncoder = new Encoder(1, 5, 1, 6, true, EncodingType.k4X);
	LiveWindow.addSensor("MainDrive", "FR Quadrature Encoder", mainDriveFRQuadratureEncoder);
        mainDriveFRQuadratureEncoder.setDistancePerPulse(1.0);
        mainDriveFRQuadratureEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        mainDriveFRQuadratureEncoder.start();
        mainDriveRRQuadratureEncoder = new Encoder(1, 7, 1, 8, true, EncodingType.k4X);
	LiveWindow.addSensor("MainDrive", "RR Quadrature Encoder", mainDriveRRQuadratureEncoder);
        mainDriveRRQuadratureEncoder.setDistancePerPulse(1.0);
        mainDriveRRQuadratureEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        mainDriveRRQuadratureEncoder.start();
        mainCompressorFeederPostionArm = new DoubleSolenoid(1, 1, 2);      
	
        
        mainCompressorMainCompressor = new Compressor(1, 14, 1, 1);
	
        
        ballFeederBallFeeder1 = new Jaguar(1, 5);
	LiveWindow.addActuator("BallFeeder", "BallFeeder1", (Jaguar) ballFeederBallFeeder1);
        
        ballFeederBallFeeder2 = new Jaguar(1, 6);
	LiveWindow.addActuator("BallFeeder", "BallFeeder2", (Jaguar) ballFeederBallFeeder2);
        
        ballTossBallTossPosition = new AnalogChannel(1, 2);
	LiveWindow.addSensor("BallToss", "BallTossPosition", ballTossBallTossPosition);
        
        ballTossBallToss1 = new Jaguar(1, 7);
	LiveWindow.addActuator("BallToss", "BallToss1", (Jaguar) ballTossBallToss1);
        
        ballTossBallToss2 = new Jaguar(1, 8);
	LiveWindow.addActuator("BallToss", "BallToss2", (Jaguar) ballTossBallToss2);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
