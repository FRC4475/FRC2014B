// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4475.Robot4475B.subsystems;
import org.usfirst.frc4475.Robot4475B.RobotMap;
import org.usfirst.frc4475.Robot4475B.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
/**
 *
 */
public class MainDrive extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController fLSpeedController = RobotMap.mainDriveFLSpeedController;
    SpeedController rLSpeedController = RobotMap.mainDriveRLSpeedController;
    SpeedController fRSpeedController = RobotMap.mainDriveFRSpeedController;
    SpeedController rRSpeedController = RobotMap.mainDriveRRSpeedController;
    RobotDrive mainDrive1 = RobotMap.mainDriveMainDrive1;
    Gyro robotSpinGyro = RobotMap.mainDriveRobotSpinGyro;
    Ultrasonic distanceSensor = RobotMap.mainDriveDistanceSensor;
    Encoder fLQuadratureEncoder = RobotMap.mainDriveFLQuadratureEncoder;
    Encoder rLQuadratureEncoder = RobotMap.mainDriveRLQuadratureEncoder;
    Encoder fRQuadratureEncoder = RobotMap.mainDriveFRQuadratureEncoder;
    Encoder rRQuadratureEncoder = RobotMap.mainDriveRRQuadratureEncoder;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithJoysticks());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	fLQuadratureEncoder.start();
        rLQuadratureEncoder.start();
        fRQuadratureEncoder.start();
        rRQuadratureEncoder.start();
        
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void ResetEncoders(){
        fLQuadratureEncoder.reset();
        rLQuadratureEncoder.reset();
        fRQuadratureEncoder.reset();
        rRQuadratureEncoder.reset();
    }
    public double GetDistanceTraveled(){
        SmartDashboard.putNumber("Distance Traveled", rLQuadratureEncoder.getDistance());
        return rLQuadratureEncoder.getDistance();
    }
    
    
    public double getDistance(){
        return distanceSensor.getRangeInches();
    }
    public void driveWithJoystick(Joystick gamePad){
       mainDrive1.mecanumDrive_Cartesian(gamePad.getX(), gamePad.getY(), gamePad.getTwist(), 0);
    }
    public void driveForward(double speed){
        mainDrive1.mecanumDrive_Cartesian(0,speed , 0, 0);
    }
    public void driveRotate(double speed){
        // Rotate Bot + Right - Left.
        mainDrive1.mecanumDrive_Cartesian(0, 0, speed, 0);
    }
    public void driveStop(){
        mainDrive1.mecanumDrive_Cartesian(0, 0, 0, 0);
    }
    
}
